<!DOCTYPE html 
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculadora de Raíces con Newton-Raphson</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjs/10.0.0/math.min.js"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
    <style>
        body{
               font-family: monserrat, sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
               display: flex;
               flex-direction: column;
               justify-content: center;
               align-items: center;
               height: 100vh;
               margin: 0;
               background: #f4f4f4;
               box-sizing: border-box;
}
          .math-Preview {

               background: rgba(0, 0, 0, 0.09);

               margin: 10px 0;

               border-radius: 10px;

          }

  

          .calculator {

               display: flex;

               flex-direction: column;

               background: #ffffff;

               border-radius: 10px;

               box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);

               color: #000000;

               padding: 10px;

               min-width: 450px;

               min-height: 300px;

               justify-content: space-around;

          }

  

          .calculator h1 {

               text-align: center;

               margin-bottom: 20px;

               font-size: 25px;

               color: #1010108c;

          }

  

          .calculator input[type="text"] {

               padding: 20px;

               border: 1px solid rgba(0, 0, 0, 0.178);

               border-radius: 5px;

               font-size: 18px;

  

          }

  

          .calculator button {

               width: 100%;

               padding: 10px;

               background: #00bcd4;

               border: none;

               border-radius: 5px;

               font-size: 18px;

               color: #fff;

               cursor: pointer;

               transition: background 0.3s;

          }

  

          .calculator button:hover {

               background: #008c9e;

          }

  

          .calculator table {

               width: 100%;

               margin-top: 20px;

               border-collapse: collapse;

          }

  

          .calculator th,

          .calculator td {

               padding: 10px;

               border: 1px solid #00000035;

               text-align: center;

               font-size: 15px;

          }

  
  

          .calculator p {

               text-align: center;

               font-size: 20px;

               margin-top: 20px;

               color: #ff5722;

          }

  

          @media screen and (max-width: 600px) {

               .calculator {

                    min-width: 300px;

               }

  

               footer {

                    width: 70%;

                    font-size: 10px;

                    text-align: center;

               }

  

          }

  

          footer {

               color: rgba(0, 0, 0, 0.458);

               position: absolute;

               bottom: 0;

          }

     </style>

</head>

  

<body>

     <div class="calculator">

          <h1>Método Newton-Raphson</h1>

          <input type="text" id="functionInput" placeholder="Ingresa la función" oninput="updateMathPreview()">

          <div id="mathPreview" class="math-preview"></div>

          <br>

          <button onclick="findAllRoots()">Calcular</button>

          <div id="results"></div>

     </div>

     <footer>

          <p><kbd>Anderson Marin</kbd>, <kbd>Sofia Chaves</kbd>, <kbd>Mateo Melgarejo</kbd>, <kbd>Karen Gomez</kbd> y

               <kbd>Maria Torres</kbd>

          </p>

     </footer>

  

    <script>

          function updateMathPreview() {

               const input = document.getElementById('functionInput').value;

               const preview = document.getElementById('mathPreview');

  

               // Renderizar la expresión matemática en la vista previa

               preview.innerHTML = `$$f(x)=${input}$$`;

  

               // Actualizar MathJax para renderizar la nueva expresión

               MathJax.typesetPromise([preview]);

          }

  

          function findAllRoots() {

               const functionStr = document.getElementById('functionInput').value;

               const expr = math.parse(functionStr);

               const derivative = math.derivative(expr, 'x');

               const f = (x) => expr.evaluate({ x });

               const df = (x) => derivative.evaluate({ x });

  

               let roots = [];

               const initialGuesses = createRange(-10, 10, 0.5);  // Rango de valores iniciales a explorar

  

               initialGuesses.forEach(x0 => {

                    let root = newtonRaphson(f, df, x0);

                    if (root !== null && !roots.some(r => Math.abs(r.root - root) < 1e-6)) {

                         let error = Math.abs(f(root));

                         roots.push({ root: root, error: error });

                    }

               });

  

               displayResults(roots);

          }

  

          function newtonRaphson(f, df, x0, tol = 1e-7, maxIter = 100) {

               let x = x0;

               for (let i = 0; i < maxIter; i++) {

                    let x1 = x - f(x) / df(x);

                    if (Math.abs(x1 - x) < tol) {

                         return parseFloat(x1.toFixed(6));

                    }

                    x = x1;

               }

               return null;  // Devuelve null si no se encuentra una raíz

          }

  

          function createRange(start, end, step) {

               let range = [];

               for (let i = start; i <= end; i += step) {

                    range.push(i);

               }

               return range;

          }

  

          function displayResults(roots) {

               const resultsDiv = document.getElementById('results');

               resultsDiv.innerHTML = "";  // Limpiar resultados anteriores

  

               if (roots.length === 0) {

                    resultsDiv.innerHTML = "<p>No se encontraron raíces.</p>";

                    return;

               }

  

               // Crear tabla para mostrar las raíces y errores

               const table = document.createElement('table');

               const headerRow = table.insertRow();

               const headerCell1 = headerRow.insertCell();

               headerCell1.textContent = "Raíz Encontrada";

               const headerCell2 = headerRow.insertCell();

               headerCell2.textContent = "Error Absoluto";

  

               roots.forEach(rootObj => {

                    const row = table.insertRow();

                    const cell1 = row.insertCell();

                    cell1.textContent = rootObj.root;

                    const cell2 = row.insertCell();

                    cell2.textContent = rootObj.error.toString();

               });

  

               resultsDiv.appendChild(table);

          }

     </script>
</body>
</html>
